plugins {
    id("java")
    id("com.github.johnrengelman.shadow") version("7.0.0")
}

group(groupName)
version(versionString)

allprojects {
    repositories {
        mavenCentral()

        maven { url ("https://libraries.minecraft.net/") }

        maven { url("https://oss.sonatype.org/content/repositories/snapshots/") }
        maven { url("https://hub.spigotmc.org/nexus/content/repositories/snapshots/") }
    }
}

shadowJar {
    archiveBaseName.set("${rootProjectName}")
    archiveClassifier.set("java${javaBuildVersion}")

    relocate("org.jetbrains", "${libraryPackage}.annotations");
    relocate("com.zaxxer", "${libraryPackage}.hikaricp")
    relocate("org.jdbi", "${libraryPackage}.jdbi")
}

dependencies {
    //annotations
    implementation("org.jetbrains:annotations:16.0.2")

    //spigot
    compileOnly("org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT")
    compileOnly("com.mojang:authlib:1.5.21")

    //database connectivity (mysql)
    implementation("com.zaxxer:HikariCP:4.0.3")
    implementation("org.jdbi:jdbi3-core:3.1.0")

    //packet compatibility
    implementation(project(":packets"))

    def java = Integer.parseInt(javaBuildVersion)

    if (java == 16) {
        implementation(project(":packets:1_17_1-R0_1"))
    } else if (java == 17) {
        implementation(project(":packets:1_18_1-R0_1"))
        implementation(project(":packets:1_18_2-R0_1"))
    } else {
        [ "1_8_8-R0_1",
          "1_12_2-R0_1",
          "1_16_5-R0_1",
        ].forEach({
            implementation(project(":packets:${it}"))
        })
    }
}

processResources {
    filesMatching("**/*.yml") {
        filter { String line ->
            line.replace("@v", versionString.toString())
        }
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(javaBuildVersion))
    }
}
